# Es.2 - Leggi 2 valori dalla memoria, aggiungendoli e sommandoli

.data	# Definisce i dati su cui il programma lavora
opd1:	.word 0x00005678	# Identificatori (nomi simbolici - opd1, opd2, result) - Associano il nome ad un indirizzo di memoria
opd2:	.word 0x12340000	# La parola .word mi dice che sto allocando in memoria uno spazio per memorizzare una word (quantitÃ  di memoria pari a 32bit nell'architettura MIPS)
result:	.space 4		# Alloca uno .space di 4 byte

.text	# Definisce l'inizio del segmento che contiene il codice
.globl main
.ent main
main:
	la $t0, opd1		# Load address - Istruzione che carica un indirizzo (carica nel registro t0 l'indirizzp di opd1)
	lw $t1, ($t0)		# Load word - Legge dalla memoria una variabile
	la $t0, opd2
	lw $t2, ($t0)
	add $t3, $t1, $t2	# Istruzione di somma aritmetica tra il registro t1 e t2 e salva il risultato nel registro t3

	la $t0, result
	sw $t3, ($t0)		# Store word - Scrive in memoria
	li $v0, 10		# Load immediate (valore 10, costante => immediata)
	syscall
	
# lw, sw => uniche istruzioni che fanno un accesso in memoria (le altre istruzioni accedono ai registri!)
